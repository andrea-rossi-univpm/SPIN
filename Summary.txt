SPIN per VERIFICHE STATISTICHE

statistics1.pml => valor medio di n
statistics2.pml => valor medio di n + numero di riperizioni dei valori estratti
statistics3.pml => loop infinito che da in output i valori minori della soglia
statistics_final.pml => data una certa soglia, si looppa finchè non viene raggiunto uno stato (valore di n) inferiore della soglia definita.

RSA

simple.pml => implementa il concetto della mutua esclusione, che non viene rispettata. 
              (Un paziente suona la campanella mentre già è stata suonata da un altro)
              => failed assertion: assert((critica<=1))


multiple.pml => miglioramento del modello tramite il vettore delle campanelle e il vettore degli allarmi. 
                C'è una campanella per stanza.
                Ogni processo va a lavorare solo su un elemento del vettore ( che è la campanella ) ciclicamente.
                In questo caso l'infermiera (una sola) controlla sequenzialmente gli allarmi attivi e li gestisce in modo sequenziale.

multiple_random.pml => stesso pattern del precedente ma gli anziani che generano un allarme sono random.
                       L'infermiera fa 5 verifiche.
                    
multiple_random2.pml => uguale al precedente ma l'infermiera fa infinite verifiche.

multiple_deadlock.pml => Variazione che va in deadlock: 
                         --> risuonare l'allarme (campanella) non aggiunge effetto sulla campanella
                         --> inolrte l'infermiera si aspetta sempre un allarme attivo.
